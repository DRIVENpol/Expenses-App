{"version":3,"sources":["Components/Expenses/ExpenseFilter.js","Components/Expenses/ExpenseDate.js","Components/UI/Card.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpenses/ExpenseForm.js","Components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","defaultYear","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","children","ExpenseItem","title","amount","ExpensesList","_expenses","items","length","color","map","detail","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","valueArrayOfMax","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","details","filter","toString","selectedYear","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","isOpen","setIsOpen","useEffect","i","acc","document","getElementsByClassName","addEventListener","this","classList","toggle","panel","nextElementSibling","display","onSubmit","preventDefault","expenseData","Date","onSavedData","type","min","step","NewExpenses","enteredData","_enteredData","random","console","log","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.8e92fa53.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"./ExpenseFilter.css\"\n\nconst ExpensesFilter = (props) => {\n\nconst dropDownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n};\n\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.defaultYear} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from 'react'\n\nimport \"./ExpenseDate.css\"\n\nconst ExpenseDate = (props) => {\n\nconst month = props.date.toLocaleString('en-US', {month:'long'});\nconst day = props.date.toLocaleString('en-US', {day:'2-digit'});\nconst year = props.date.getFullYear();\n\n\n  return (\n    <>\n     <div className='expense-date'>\n        <div className='expense-date__month'>{month}</div>\n        <div className='expense-date__day'>{day}</div>\n        <div className='expense-date__year'>{year}</div>\n    </div>\n    </>\n  )\n}\n\nexport default ExpenseDate","import React from 'react'\n\nimport './Card.css'\n\nconst Card = (props) => {\n  return (\n    <div className='card'>{props.children}</div>\n  )\n}\n\nexport default Card","import React from 'react';\n\nimport './ExpenseItems.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from '../UI/Card'\n\nconst ExpenseItem = (props) => {\n\n\nreturn (\n  <Card>\n    <div className='expense-item'>\n    \n    <ExpenseDate date={props.date}/>\n\n    <div className='expense-item__description'>\n    <h2>{props.title}</h2>\n    </div>\n    \n    <div className='expense-item__price'>\n   ${props.amount}\n    </div>\n\n    </div>\n    </Card>\n  )\n}\n\nexport default ExpenseItem","import React from 'react'\n\nimport ExpenseItem from './ExpenseItem'\nimport \"./ExpensesList.css\"\n\nconst ExpensesList = (props) => {\n\nlet _expenses = props.items;\n\n\n  return (<>\n    {_expenses.length === 0 ? \n        (<center><p><font color = 'white'>No expenses found!</font></p></center>)\n        : \n        (_expenses.map(detail =>\n         <div key={detail.id}>\n         <ExpenseItem\n         title={detail.title} \n         amount={detail.amount}\n         date={detail.date}\n          /></div>\n          ))}\n          </>)\n}\n\nexport default ExpensesList","import React from 'react'\n\nimport \"./ChartBar.css\"\n\nconst ChartBar = (props) => {\n\nlet barFillHeight = '0%';\n\nif (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n}\n\nreturn (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n}\n\nexport default ChartBar","import React from 'react'\n\nimport ChartBar from './ChartBar'\nimport \"./Chart.css\"\n\nconst Chart = (props) => {\n\n  const valueArrayOfMax = props.dataPoints.map(\n    dataPoint => dataPoint.value\n  );\n\n  const totalMax = Math.max(...valueArrayOfMax);\n\n  return (\n    <div className='chart'>\n    {props.dataPoints.map(\n      dataPoint => <ChartBar \n        key={dataPoint.label}\n        value={dataPoint.value}\n        maxValue={totalMax}\n        label={dataPoint.label}\n      />\n    )}\n    </div>\n  )\n}\n\nexport default Chart","import React from 'react'\n\nimport Chart from '../Chart/Chart'\n\nconst ExpensesChart = (props) => {\n\n    const chartDataPoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n  return (\n   <Chart dataPoints={chartDataPoints} />\n  )\n}\n\nexport default ExpensesChart","import React, {useState} from 'react'\n\nimport './Expenses.css'\nimport ExpensesFilter from './ExpenseFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = (props) => {\n\nconst [filteredYear, setFilteredYear] = useState('2020');\n\n// Create a copy of the props (the items)\n// Filter them by year\n// Use that new const in mapping\nconst filteredExpenses = props.details\n.filter(expense => {\n  return expense.date.getFullYear().toString() === filteredYear;\n});\n\nconst filterChangeHandler = selectedYear => {\n  // console.log('Expenses.js');\n  // console.log(selectedYear);\n  setFilteredYear(selectedYear);\n}\n\n  return (\n   <>\n  \n   <div className='expenses'>\n   <ExpensesFilter onChangeFilter={filterChangeHandler}\n   defaultYear={filteredYear} />\n   \n   <ExpensesChart expenses={filteredExpenses} />\n\n   <ExpensesList items={filteredExpenses} />\n      </div>\n   </>\n  )\n}\n\nexport default Expenses","import React, {useState, useEffect} from 'react'\n\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n\nconst [newTitle, setNewTitle] = useState('');\nconst [newAmount, setNewAmount] = useState('');\nconst [newDate, setNewDate] = useState('');\n\nconst [isOpen, setIsOpen] = useState('');\n\n\n// const [userInput, setUserInput] = useState({\n//     newTitle: '',\n//     newAmount: '',\n//     newDate: ''\n// });\n\n\nconst titleChangeHandler = (event) => {\n    // Option 1\n    setNewTitle(event.target.value);\n\n    // Option 2\n    // setUserInput({\n    //    ...userInput, // Copy the existing value\n    //    newTitle: event.target.value // Override this value\n    // })\n\n    // Option 3 - the best for state snapshots\n    // setUserInput((prevState) => {\n    //     return {...prevState, newTitle: event.target.value}\n    // });\n}\n\nconst amountChangeHandler = (event) => {\n    // Option 1\n    setNewAmount(event.target.value);\n\n    // Option 2\n    // setUserInput({\n    //    ...userInput, // Copy the existing value\n    //    newAmount: event.target.value // Override this value\n    // })\n    \n    // Option 3 - the best for state snapshots\n    // setUserInput((prevState) => {\n    //     return {...prevState, newAmount: event.target.value}\n    // });\n}\n\nconst dateChangeHandler = (event) => {\n    // Option 1\n    setNewDate(event.target.value);\n\n    // Option 2\n    // setUserInput({\n    //    ...userInput, // Copy the existing value\n    //    newDate: event.target.value // Override this value\n    // })\n\n    // Option 3 - the best for state snapshots\n    // setUserInput((prevState) => {\n    //     return {...prevState, newDate: event.target.value}\n    // });\n}\n\nconst submitHandler = (event) => {\n    event.preventDefault(); // Prevent the reload on submit\n\n    // Lesson 59\n    const expenseData = {\n        title: newTitle,\n        amount: newAmount,\n        date: new Date(newDate)\n    };\n\n    // Lesson 59\n    props.onSavedData(expenseData);\n\n    setNewTitle('');\n    setNewAmount('');\n    setNewDate('');\n\n};\n\nuseEffect(() => {\nvar acc = document.getElementsByClassName(\"accordion\");\nvar i;\n\nfor (i = 0; i < acc.length; i++) {\n  acc[i].addEventListener(\"click\", function() {\n    this.classList.toggle(\"active\");\n    var panel = this.nextElementSibling;\n    if (panel.style.display === \"block\" && isOpen === \"block\") {\n      panel.style.display = \"none\";\n      setIsOpen(\"none\");\n      \n    } else {\n      \n      panel.style.display = \"block\";\n      setIsOpen(\"block\");\n    }\n  });\n}\n})\n\n\n  return (\n      <>\n              <button className=\"accordion\">\n                  {isOpen === \"block\" ? (\n                    <>Close</>\n                  ):(<>Add New Expense</>)}</button>\n              \n<div className=\"panel\">\n\n        <form onSubmit={submitHandler}>\n\n            <div className='new-expense__control'></div>\n\n            <div className='new-expense__control'>\n                <label>Title</label>\n                <input type='text' value={newTitle} onChange={titleChangeHandler}/>\n            </div>\n\n            <div className='new-expense__control'>\n                <label>Amount</label>\n                <input type='number' min='0.01' step='0.01' \n                    onChange={amountChangeHandler} value={newAmount}\n                />\n            </div>\n\n            <div className='new-expense__control'>\n                <label>Date</label>\n                <input type='date' min='2019-01-01' max='2023-12-31'\n                      onChange={dateChangeHandler}\n                      value={newDate}\n                />\n            </div>\n\n        <div className='new-expense__actions'>\n        <center>\n        <button type='submit'>Add Expense</button>\n        </center>\n           \n        </div>\n\n        </form>\n    </div>\n\n</>\n  )\n}\n\nexport default ExpenseForm","import React from 'react'\n\nimport './NewExpenses.css'\nimport ExpenseForm from './ExpenseForm'\n\nconst NewExpenses = (props) => {\n\n  const savedDataHandler = (enteredData) => {\n    const _enteredData = {\n      ...enteredData, // Copy \"const expenseData\" from ExpenseForm.js\n      id: Math.random().toString() // Generate random id\n    };\n    console.log(_enteredData);\n\n    // Lesson 59\n    props.onAddExpense(_enteredData);\n  }\n\n  return (\n    <div className='new-expense'>\n    {/* \n    We pass the function as a prop to ExpenseForm.js \n    [Lesson 59]\n    */}\n    <ExpenseForm onSavedData={savedDataHandler} />\n    </div>\n  )\n}\n\nexport default NewExpenses","import React, {useState} from \"react\";\n\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpenses from \"./Components/NewExpenses/NewExpenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n\n  { id: 'e2', \n  title: 'New TV', \n  amount: 799.49, \n  date: new Date(2021, 2, 12) },\n\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = expense => {\n    // console.log('In-app js!');\n    // console.log(expense);\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (<>\n    <NewExpenses onAddExpense={addExpenseHandler} />\n    <Expenses details={expenses}/>\n   </>);\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}